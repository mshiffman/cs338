
-----BEGIN RSA PRIVATE KEY-----
MIIG4wIBAAKCAYEAvb65fAVSR8A9G0EXDsuMfI31LiPNOgoVBpHrG9A+6kt0IFsj
6lhUIoag7ZusW1t6qZFDefms8h+XoyPAXwl5SKst+nh9gh//N/2GM+cQ2IFLbwqn
nmjoXsIdLZCV2CCg5vuynTvfFIPzac6KyGo3ANiY/xvEAa6KjGH80/HjbC4HuuWO
ZJAxvbc/1c6d8TvRn33aEuJAZq6+N+bzVeNfeTXVR9XzV52dRa3Tn6Rzqv/Y3XJP
lGrhilTDYPWTFAwrhmbI68mRlbkVOpVsxASE6YSVDY+vRUOFeuJo1jkGGWdUmEQY
iN38JrIS3s+8xyloqvjjHfa0amjVQYVpmlIPXgAchfUZT2l3pfllPuuM8q5N4Od5
FMjaQSzalW8WoMWPv3uBNp+16zK5DXOaZfBFOHhxHwNGrE+godx34YvqXqvZPNWR
F5/z/GO0w7caSRmkXCxAoyucS0TyRE+CVYNDU/tOm+/ejbdiIZ7RvoqPLMnwT4kK
HownHMz60hZXyWpjAgMBAAECggGAVY0h+o43rAw8QQaXC9+w5xPmgTg5NzsGgeDW
3cKGK4N7x37wcaADx1FmS9vN2Z8kbkIF54AwfzbJWxAqk28lFSPBZlZfWIVuwGL5
2HsNeGDLjzSBoQXyB4+EMmAnf7wucBb6ULSG/6wC2yj6ICTryeDfEt8FADEfXO5t
XW6JuOQELjuEeUkedEikapVvVy4+dKf85FjI6sNNFs1117rd+DvSf0IzJsT0/U7D
xQ4T7PzQXgBFa0jJimJveU8gUoCtdAqVfheP54M68lZ6hH4Z/RHsvYFB2zI7PZBR
J7Y7K1d4pz9tAR+VzE9SHeN7m9EeLQSM3dytCBoufmIBx3PtkptfNRXhxamcMYYU
FeIoQGLqQFDL9paHw2EmrQAR5x0psIDq5cVWICMxqx1bfKbuGTsbQ8KlLLIsNPdy
fGl0uSvuKZ3FSrXYg217HKIPYt3AfNS78pBwcS5oWvCbb3HlkRILJOGOLMGH955Z
c/gRnnW/NJDcZvayaBv07a+brHZhAoHBAOuc8d8544VzlUUwJelsmfnm1GWvoCC+
kFeIeZ3clAKxIwahWMhDnm5PPCpjunwV9b75r5AHlCj8AQEE3tZJ+N/380NcDcod
Jv8AVluMJoyxcYhKcNcesBxrA+hs8pRGl6E3x1pl6ekVlnsn2ONH4I3p4vnnl/GK
uVpP11cOkr2H0PvnfUFXon9OF7sEExSHhiAMjNo88bE9LblgkSV1+Muxc1ra0Rzf
Z2iY8+xDZAVtQDWokS46bYInotQVD8iwEwKBwQDOKcIuawQF3Yhvb4tbZeqCj1RQ
Y/V+mjtFgcfaRXZUM0CcfZJKMVsG3Bckg8TSldguOT+TbkYH2pL5xuo1WFRlyHNq
mMcVF8NW6RGOkBRXSMG9Aap2hzQ8yDJ5R8VUDnlxOvjqnStE0hEcl6TDue4y+MQy
umHqVETlmhhVXXWMSl/UOFM7oLgxZAx7MhaF8Bj2XOCxvI5leEA/NJOjUWMB2/LP
pxObR8kEvWUikUfGDLMzLr1Lvr6G1EG0NDqHxnECgcA/lU0YprCl1PlVgJbalXpA
HHD5OBoIfCTL2oKnfV1cFJ2VLnmdIdJhhnSAJAWxcuOstAkS31i2brt+oOfaAIBv
QKSfavo1rwRVEKw9bGcC1OgElcI564gvQxn84Vndded5lGnyFUq4oiDH/4riWwVY
huO/+SXiA0PeAWnljoM/LqXRNTlyJsotfM+eoozbn28suvZP9t5qrE3olwzUhS+t
GKg+vopsNkXbzlsVSWJ2rHMFiAYV6aKf2z5v6Xcm+40CgcEAo4dcD5WzSzO91SaV
U5ozufwW1O10/Uc5XJjk/a27fm5pAbhZIaCko3xQnxYmOSPCpmeilj8SLYiirJ2r
iUTXLSUi55rnz0NaHsYgtwRyHgoIIvP/UqVMOipSXwEe9N3GVpqAdxjUCXLXP+bJ
Ordwyd2pQtO0dzsAq17fjlbjtrQH7z3+R33knMjPXakNVJBuPHzPfiwihzorO/do
ZFNaRU9B+pR8aN84BBp27kRuuhm4yxB39m0Gk8wpkdcb1jcBAoHAIqTjMmSAJjTv
RieWKnscSAubx+Up+kqCN9btZcTAn0inGfvzAkU5bjHOph+RgOjgWSef+uyDXstY
tvD0K3QBC9rkq9P+gpknENiUQwrNsCtoCPFetNPgVFvpfribRlT795VdRK6cDOmQ
Z+pe74kGp91iC+wTm0dZJBPPxwfS+iPgoZwn8yw6Y9sEQGyuXoMHy4mGYloFKJF+
hIgatlwnYoaQrS029SGlWv1+QUHJfhyEXqJ6TWL4q7lkmLuh+vB5
-----END RSA PRIVATE KEY-----

-----BEGIN RSA PUBLIC KEY-----
MIIBigKCAYEAvb65fAVSR8A9G0EXDsuMfI31LiPNOgoVBpHrG9A+6kt0IFsj6lhU
Ioag7ZusW1t6qZFDefms8h+XoyPAXwl5SKst+nh9gh//N/2GM+cQ2IFLbwqnnmjo
XsIdLZCV2CCg5vuynTvfFIPzac6KyGo3ANiY/xvEAa6KjGH80/HjbC4HuuWOZJAx
vbc/1c6d8TvRn33aEuJAZq6+N+bzVeNfeTXVR9XzV52dRa3Tn6Rzqv/Y3XJPlGrh
ilTDYPWTFAwrhmbI68mRlbkVOpVsxASE6YSVDY+vRUOFeuJo1jkGGWdUmEQYiN38
JrIS3s+8xyloqvjjHfa0amjVQYVpmlIPXgAchfUZT2l3pfllPuuM8q5N4Od5FMja
QSzalW8WoMWPv3uBNp+16zK5DXOaZfBFOHhxHwNGrE+godx34YvqXqvZPNWRF5/z
/GO0w7caSRmkXCxAoyucS0TyRE+CVYNDU/tOm+/ejbdiIZ7RvoqPLMnwT4kKHown
HMz60hZXyWpjAgMBAAE=
-----END RSA PUBLIC KEY-----

Private Key
I would expect the items below to be in the private key:
  RSAPrivateKey ::= SEQUENCE {
       version           Version,
       modulus           INTEGER,  -- n
       publicExponent    INTEGER,  -- e
       privateExponent   INTEGER,  -- d
       prime1            INTEGER,  -- p
       prime2            INTEGER,  -- q
       exponent1         INTEGER,  -- d mod (p-1)
       exponent2         INTEGER,  -- d mod (q-1)
       coefficient       INTEGER,  -- (inverse of q) mod p
       otherPrimeInfos   OtherPrimeInfos OPTIONAL
   }
I decoded the file by using http://ldh.org/asn1.html

Version:
0x00

Modulus, used as n:
0x00bdbeb97c055247c03d1b41170ecb8c7c8df52e23cd3a0a150691eb1bd03eea4b74205b23ea58542286a0ed9bac5b5b7aa9914379f9acf21f97a323c05f097948ab2dfa787d821fff37fd8633e710d8814b6f0aa79e68e85ec21d2d9095d820a0e6fbb29d3bdf1483f369ce8ac86a3700d898ff1bc401ae8a8c61fcd3f1e36c2e07bae58e649031bdb73fd5ce9df13bd19f7dda12e24066aebe37e6f355e35f7935d547d5f3579d9d45add39fa473aaffd8dd724f946ae18a54c360f593140c2b8666c8ebc99195b9153a956cc40484e984950d8faf4543857ae268d6390619675498441888ddfc26b212decfbcc72968aaf8e31df6b46a68d54185699a520f5e001c85f5194f6977a5f9653eeb8cf2ae4de0e77914c8da412cda956f16a0c58fbf7b81369fb5eb32b90d739a65f0453878711f0346ac4fa0a1dc77e18bea5eabd93cd591179ff3fc63b4c3b71a4919a45c2c40a32b9c4b44f2444f8255834353fb4e9befde8db762219ed1be8a8f2cc9f04f890a1e8c271cccfad21657c96a63

publicExponent, used as e:
0x010001

privateExponent, used as d:
0x558d21fa8e37ac0c3c4106970bdfb0e713e6813839373b0681e0d6ddc2862b837bc77ef071a003c751664bdbcdd99f246e4205e780307f36c95b102a936f251523c166565f58856ec062f9d87b0d7860cb8f3481a105f2078f843260277fbc2e7016fa50b486ffac02db28fa2024ebc9e0df12df0500311f5cee6d5d6e89b8e4042e3b8479491e7448a46a956f572e3e74a7fce458c8eac34d16cd75d7baddf83bd27f423326c4f4fd4ec3c50e13ecfcd05e00456b48c98a626f794f205280ad740a957e178fe7833af2567a847e19fd11ecbd8141db323b3d905127b63b2b5778a73f6d011f95cc4f521de37b9bd11e2d048cdddcad081a2e7e6201c773ed929b5f3515e1c5a99c31861415e2284062ea4050cbf69687c36126ad0011e71d29b080eae5c556202331ab1d5b7ca6ee193b1b43c2a52cb22c34f7727c6974b92bee299dc54ab5d8836d7b1ca20f62ddc07cd4bbf29070712e685af09b6f71e591120b24e18e2cc187f79e5973f8119e75bf3490dc66f6b2681bf4edaf9bac7661

prime1, used as p:
0x00eb9cf1df39e3857395453025e96c99f9e6d465afa020be905788799ddc9402b12306a158c8439e6e4f3c2a63ba7c15f5bef9af90079428fc010104ded649f8dff7f3435c0dca1d26ff00565b8c268cb171884a70d71eb01c6b03e86cf2944697a137c75a65e9e915967b27d8e347e08de9e2f9e797f18ab95a4fd7570e92bd87d0fbe77d4157a27f4e17bb0413148786200c8cda3cf1b13d2db960912575f8cbb1735adad11cdf676898f3ec4364056d4035a8912e3a6d8227a2d4150fc8b013

prime2, used as q:
0x00ce29c22e6b0405dd886f6f8b5b65ea828f545063f57e9a3b4581c7da45765433409c7d924a315b06dc172483c4d295d82e393f936e4607da92f9c6ea35585465c8736a98c71517c356e9118e90145748c1bd01aa7687343cc8327947c5540e79713af8ea9d2b44d2111c97a4c3b9ee32f8c432ba61ea5444e59a18555d758c4a5fd438533ba0b831640c7b321685f018f65ce0b1bc8e6578403f3493a3516301dbf2cfa7139b47c904bd65229147c60cb3332ebd4bbebe86d441b4343a87c671

exponent1:
0x3f954d18a6b0a5d4f9558096da957a401c70f9381a087c24cbda82a77d5d5c149d952e799d21d2618674802405b172e3acb40912df58b66ebb7ea0e7da00806f40a49f6afa35af045510ac3d6c6702d4e80495c239eb882f4319fce159dd75e7799469f2154ab8a220c7ff8ae25b055886e3bff925e20343de0169e58e833f2ea5d135397226ca2d7ccf9ea28cdb9f6f2cbaf64ff6de6aac4de8970cd4852fad18a83ebe8a6c3645dbce5b15496276ac7305880615e9a29fdb3e6fe97726fb8d

exponent2:
0x00a3875c0f95b34b33bdd52695539a33b9fc16d4ed74fd47395c98e4fdadbb7e6e6901b85921a0a4a37c509f16263923c2a667a2963f122d88a2ac9dab8944d72d2522e79ae7cf435a1ec620b704721e0a0822f3ff52a54c3a2a525f011ef4ddc6569a807718d40972d73fe6c93ab770c9dda942d3b4773b00ab5edf8e56e3b6b407ef3dfe477de49cc8cf5da90d54906e3c7ccf7e2c22873a2b3bf76864535a454f41fa947c68df38041a76ee446eba19b8cb1077f66d0693cc2991d71bd63701

coefficient:
0x22a4e33264802634ef4627962a7b1c480b9bc7e529fa4a8237d6ed65c4c09f48a719fbf30245396e31cea61f9180e8e059279ffaec835ecb58b6f0f42b74010bdae4abd3fe82992710d894430acdb02b6808f15eb4d3e0545be97eb89b4654fbf7955d44ae9c0ce99067ea5eef8906a7dd620bec139b47592413cfc707d2fa23e0a19c27f32c3a63db04406cae5e8307cb8986625a0528917e84881ab65c27628690ad2d36f521a55afd7e4141c97e1c845ea27a4d62f8abb96498bba1faf079

Public Key
The items I expect to find in the public key are below. I know that these are in the key because it is listed in the appendix:
RSAPublicKey ::= SEQUENCE {
             modulus           INTEGER,  -- n
             publicExponent    INTEGER   -- e
         }

I decoded the file by converting the file to .pub using ssh-keygen -f id_rsa_homework.pub -e -m pem > id_rsa_homework.pub.pem
then uploading the .pem file contents to http://ldh.org/asn1.html

Modulus, same n as before:
0x00bdbeb97c055247c03d1b41170ecb8c7c8df52e23cd3a0a150691eb1bd03eea4b74205b23ea58542286a0ed9bac5b5b7aa9914379f9acf21f97a323c05f097948ab2dfa787d821fff37fd8633e710d8814b6f0aa79e68e85ec21d2d9095d820a0e6fbb29d3bdf1483f369ce8ac86a3700d898ff1bc401ae8a8c61fcd3f1e36c2e07bae58e649031bdb73fd5ce9df13bd19f7dda12e24066aebe37e6f355e35f7935d547d5f3579d9d45add39fa473aaffd8dd724f946ae18a54c360f593140c2b8666c8ebc99195b9153a956cc40484e984950d8faf4543857ae268d6390619675498441888ddfc26b212decfbcc72968aaf8e31df6b46a68d54185699a520f5e001c85f5194f6977a5f9653eeb8cf2ae4de0e77914c8da412cda956f16a0c58fbf7b81369fb5eb32b90d739a65f0453878711f0346ac4fa0a1dc77e18bea5eabd93cd591179ff3fc63b4c3b71a4919a45c2c40a32b9c4b44f2444f8255834353fb4e9befde8db762219ed1be8a8f2cc9f04f890a1e8c271cccfad21657c96a63

publicExponent, same e as before:
0x010001

Sanity Check
##used python code below to check if values worked
from ast import literal_eval #source https://www.geeksforgeeks.org/python-program-to-convert-hex-string-to-integer/#
import math

p = literal_eval("0x00eb9cf1df39e3857395453025e96c99f9e6d465afa020be905788799ddc9402b12306a158c8439e6e4f3c2a63ba7c15f5bef9af90079428fc010104ded649f8dff7f3435c0dca1d26ff00565b8c268cb171884a70d71eb01c6b03e86cf2944697a137c75a65e9e915967b27d8e347e08de9e2f9e797f18ab95a4fd7570e92bd87d0fbe77d4157a27f4e17bb0413148786200c8cda3cf1b13d2db960912575f8cbb1735adad11cdf676898f3ec4364056d4035a8912e3a6d8227a2d4150fc8b013")
q = literal_eval("0x00ce29c22e6b0405dd886f6f8b5b65ea828f545063f57e9a3b4581c7da45765433409c7d924a315b06dc172483c4d295d82e393f936e4607da92f9c6ea35585465c8736a98c71517c356e9118e90145748c1bd01aa7687343cc8327947c5540e79713af8ea9d2b44d2111c97a4c3b9ee32f8c432ba61ea5444e59a18555d758c4a5fd438533ba0b831640c7b321685f018f65ce0b1bc8e6578403f3493a3516301dbf2cfa7139b47c904bd65229147c60cb3332ebd4bbebe86d441b4343a87c671")
n= literal_eval("0x00bdbeb97c055247c03d1b41170ecb8c7c8df52e23cd3a0a150691eb1bd03eea4b74205b23ea58542286a0ed9bac5b5b7aa9914379f9acf21f97a323c05f097948ab2dfa787d821fff37fd8633e710d8814b6f0aa79e68e85ec21d2d9095d820a0e6fbb29d3bdf1483f369ce8ac86a3700d898ff1bc401ae8a8c61fcd3f1e36c2e07bae58e649031bdb73fd5ce9df13bd19f7dda12e24066aebe37e6f355e35f7935d547d5f3579d9d45add39fa473aaffd8dd724f946ae18a54c360f593140c2b8666c8ebc99195b9153a956cc40484e984950d8faf4543857ae268d6390619675498441888ddfc26b212decfbcc72968aaf8e31df6b46a68d54185699a520f5e001c85f5194f6977a5f9653eeb8cf2ae4de0e77914c8da412cda956f16a0c58fbf7b81369fb5eb32b90d739a65f0453878711f0346ac4fa0a1dc77e18bea5eabd93cd591179ff3fc63b4c3b71a4919a45c2c40a32b9c4b44f2444f8255834353fb4e9befde8db762219ed1be8a8f2cc9f04f890a1e8c271cccfad21657c96a63")
e = literal_eval("0x010001")
d = literal_eval("0x558d21fa8e37ac0c3c4106970bdfb0e713e6813839373b0681e0d6ddc2862b837bc77ef071a003c751664bdbcdd99f246e4205e780307f36c95b102a936f251523c166565f58856ec062f9d87b0d7860cb8f3481a105f2078f843260277fbc2e7016fa50b486ffac02db28fa2024ebc9e0df12df0500311f5cee6d5d6e89b8e4042e3b8479491e7448a46a956f572e3e74a7fce458c8eac34d16cd75d7baddf83bd27f423326c4f4fd4ec3c50e13ecfcd05e00456b48c98a626f794f205280ad740a957e178fe7833af2567a847e19fd11ecbd8141db323b3d905127b63b2b5778a73f6d011f95cc4f521de37b9bd11e2d048cdddcad081a2e7e6201c773ed929b5f3515e1c5a99c31861415e2284062ea4050cbf69687c36126ad0011e71d29b080eae5c556202331ab1d5b7ca6ee193b1b43c2a52cb22c34f7727c6974b92bee299dc54ab5d8836d7b1ca20f62ddc07cd4bbf29070712e685af09b6f71e591120b24e18e2cc187f79e5973f8119e75bf3490dc66f6b2681bf4edaf9bac7661")


#sanity check if p*q ==n
print(n==p*q) #returns True

def lcm(a, b):
    return abs(a * b) // math.gcd(a, b)

lambdaVal = lcm(p-1, q-1)

#check if gcd between e and lambdaVal is 1 for valid e
print(math.gcd(e, lambdaVal)==1) #returns True

#check if e*d%lambdaVal ==1 for valid d
print(e*d %lambdaVal ==1) #returns true


